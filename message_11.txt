<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">

    <title>Hello, world!</title>
    <style>
        .selected {
            border-color: red;
            background-color: lightcoral;
        }
    </style>
  </head>
  <body>
    <h1>Selected books!</h1>
    <div class="container">
        <div class="row" id="selected-books">

        </div>
    </div>
    <input type="text" placeholder="search..." id="searchbar" onkeyup="buttonPressed()" />
    <div class="container">
        <div class="row" id="book-container">

        </div>
    </div>
    
    <script>
        let bookCatalogue = []

        function buttonPressed(){
            const searchBar = document.querySelector("#searchbar")
            const searchQuery = searchBar.value
            if (searchQuery.length >= 3){
                //1) se abbiam piÃ¹ di 3 lettere, filtra i libri
                console.log("maggiore di 3 caratteri")
                    //a) prendi tutti i libri
                    //b) usa la filter per selezionare i libri interessati
                    const filteredBooks = bookCatalogue.filter(book => book.title.indexOf(searchQuery) !== -1) 
                    //c) scrivi i libri all'interno della collezione
                    loadBooks(filteredBooks)
            }
            else{
                //2) se no, non fare nulla
                console.log("minore di 3 caratteri")
                loadBooks(bookCatalogue)
            }
        }

        function loadBooks(booksToDisplay) {
            const bookContainer = document.querySelector("#book-container")
            bookContainer.innerHTML = ""
            booksToDisplay.forEach(singleBook => {
                bookContainer.innerHTML += 
                `<div class="card col col-md-4 col-lg-3" >
                    <img src="${singleBook.img}" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">${singleBook.title}</h5>
                        <p class="card-text">${singleBook.category}</p>
                        <a class="btn btn-primary add-to-cart">Add to Cart</a>
                        <a class="btn btn-primary skip-button">Skip</a>
                    </div>
                </div>`
            })

            const buttons = document.querySelectorAll(".add-to-cart")
            buttons.forEach(button => button.addEventListener("click", addToCart))

            const skipButtons = document.querySelectorAll(".skip-button") //trova i bottoni skip
            skipButtons.forEach(button => button.addEventListener("click", hideBook))//aggiungi l'azione
        }

        function addToCart(e) {
            //Starting from the button, I should find a way to reach out for the card
            const parentCard = e.currentTarget.closest(".card")
            //Toggle the selected class on the parent card
            parentCard.classList.toggle("selected")

            //empty the previously created list
            const lista = document.querySelector("#selected-books")
            lista.innerHTML = ""

            //for each selected element on the page, clone the HTML element of the main list
            const selectedElements = document.querySelectorAll(".selected")
            selectedElements.forEach(selectedBook => lista.innerHTML += selectedBook.outerHTML)
        }

        function hideBook(pippo){
            //al click si applica un display none all'elemento selezionato
            //come passiamo dal bottone alla card?
            const deletedElement = pippo.currentTarget
            const parentCard = deletedElement.closest(".card")
            parentCard.style.display = "none"
        }

        window.onload = function () {
            fetch("https://striveschool-api.herokuapp.com/books")
                .then(resp => resp.json())
                .then(books => {
                    bookCatalogue = books
                   loadBooks(books)
                })
        }

    </script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous"></script>
  </body>
</html>
